from aiogram.types import (ContentType, ReplyKeyboardMarkup, KeyboardButton,
                            KeyboardButtonPollType, Message, InlineKeyboardButton,
                            InlineKeyboardMarkup, BotCommand, CallbackQuery, FSInputFile, KeyboardButton)
from aiogram.utils.keyboard import ReplyKeyboardBuilder
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram import Bot, Dispatcher, types, F
from aiogram.filters.command import CommandStart
from aiogram.filters import Command 
from config_reader import config
from aiogram.fsm.context import FSMContext
import logging
import asyncio
import os

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ª–æ–≥–∏ –≤ —Ñ–∞–π–ª
logging.basicConfig(
    filename='/Users/user/–ü—Ä–æ–µ–∫—Ç—ã/venv_Telegram/FirstTelegramBot/bot.log',
    filemode='a',
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO)

bot = Bot(token=config.bot_token.get_secret_value())
storage = MemoryStorage()
dp = Dispatcher()
users = {} 
# –°–ø–∏—Å–æ–∫ —Å ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –±–æ—Ç–∞. !!!–ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à!!!
admin_ids: list[int] = [1234567890, 987654321]

# –°–æ–∑–¥–∞–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
async def set_main_menu(bot: Bot):
    # –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å –∫–æ–º–∞–Ω–¥–∞–º–∏ –∏ –∏—Ö –æ–ø–∏—Å–∞–Ω–∏–µ–º –¥–ª—è –∫–Ω–æ–ø–∫–∏ menu
    main_menu_commands = [
        BotCommand(command='/groups', description='–ù–∞—à —Ç–µ–ª–µ–≥—Ä–∞–º–º –∫–∞–Ω–∞–ª'),
        BotCommand(command='/start', description='–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞')           
    ]
    await bot.set_my_commands(main_menu_commands) 
# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –≤ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–µ,
# –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –Ω–∞ —Å—Ç–∞—Ä—Ç–µ –±–æ—Ç–∞,
dp.startup.register(set_main_menu)

#–°–æ–∑–¥–∞–µ–º –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏ (–∫–Ω–æ–ø–∫–∏ –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º)
inline_button_1 = InlineKeyboardButton(text='üíµ –¶–µ–Ω—ã ', callback_data='show_prices')
inline_button_2 = InlineKeyboardButton(text='üìç –ù–∞—à–∏ –ª–æ–∫–∞—Ü–∏–∏ ', callback_data='show_address')
inline_button_3 = InlineKeyboardButton(text='üéæ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ ', callback_data='schedule')
inline_button_4 = InlineKeyboardButton(text='üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã —Ç—Ä–µ–Ω–µ—Ä–æ–≤', callback_data='contact')  #'https://t.me/DeeWithNoDegree'})
inline_button_5 = InlineKeyboardButton(text='‚ù£Ô∏è –ü—Ä–∞–≤–∏–ª–∞ –∞–±–æ–Ω–µ–º–µ–Ω—Ç–∞',callback_data='abonement')
inline_button_6 = InlineKeyboardButton(text='üíØ –ê–∫—Ü–∏–∏', callback_data='action_button')

keyboard = InlineKeyboardMarkup(inline_keyboard=[[inline_button_6], [inline_button_1], [inline_button_2],
                                                [inline_button_3], [inline_button_4],
                                                [inline_button_5]])

# –ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã –≤ –±–æ—Ç–µ
back_button = InlineKeyboardButton(text='‚¨Ö –ù–∞–∑–∞–¥', callback_data='back_to_menu')
back_button_1 = InlineKeyboardButton(text='üìç –ù–∞–ª–∏—á–Ω–∞—è —É–ª 44–∫6', callback_data='location_vaska')
back_button_2 = InlineKeyboardButton(text='üìç –í–ú–§ (–°—Ä–µ–¥–Ω–∏–π –ø—Ä–æ—Å–ø–µ–∫—Ç 87 –í.–û.)', callback_data='location_dynamit')
Kuznetsova_button = InlineKeyboardButton(text='–ö—É–∑–Ω–µ—Ü–æ–≤–∞ –ï–ª–∏–∑–∞–≤–µ—Ç–∞', callback_data='Kuznetsova')
Ivanova_button = InlineKeyboardButton(text='–ì—Ä–µ–≥–∞ –î–∞—Ä—å—è', callback_data='Ivanova')
Savin_button = InlineKeyboardButton(text='–°–∞–≤–∏–Ω –†–æ–º–∞–Ω', callback_data='Savin')
back_button_contact = InlineKeyboardButton(text='‚¨Ö –ù–∞–∑–∞–¥', callback_data='back_button_contact')
vaska_button_location = InlineKeyboardButton(text='üìç –ù–∞–ª–∏—á–Ω–∞—è', callback_data='vaska_button_location')
dynamit_button_location = InlineKeyboardButton(text='üìç –í–ú–§', callback_data='dynamit_button_location')
dinamo_button_location = InlineKeyboardButton(text='üìç –î–∏–Ω–∞–º–æ', callback_data='dinamo_button_location')
back_button_show_address = InlineKeyboardButton(text='‚¨Ö –ù–∞–∑–∞–¥', callback_data='show_address')
price_button_vaska = InlineKeyboardButton(text='üìç –ù–∞–ª–∏—á–Ω–∞—è', callback_data='price_button_vaska')
price_button_dynamit = InlineKeyboardButton(text='üìç –í–ú–§', callback_data='price_button_dynamit')
price_button_Dinamo = InlineKeyboardButton(text='üìç –î–∏–Ω–∞–º–æ', callback_data='price_button_dinamo')
back_button_show_price = InlineKeyboardButton(text='‚¨Ö –ù–∞–∑–∞–¥', callback_data='show_prices')
button_VMF_schedule =  InlineKeyboardButton(text='üìç –í–ú–§', callback_data='button_VMF_schedule')
button_Dinamo_schedule =  InlineKeyboardButton(text='üìç –î–∏–Ω–∞–º–æ', callback_data='button_Dinamo_schedule')
button_Nalichnay_schedule =  InlineKeyboardButton(text='üìç –ù–∞–ª–∏—á–Ω–∞—è', callback_data='button_Nalichnay_schedule')
back_button_show_schedule = InlineKeyboardButton(text='‚¨Ö –ù–∞–∑–∞–¥', callback_data='schedule')                                               

# –°–æ—Ö—Ä—è–Ω–µ–º –ø–æ—Å–ª–¥–Ω–µ–µ id —Å–æ–æ–±—â–µ–Ω–∏–µ
last_message_id = None

# # –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –∫–æ–º–∞–Ω–¥—É "/start"
@dp.message(Command("start"))
async def process_start_command(message: types.Message):
    global last_message_id
    logging.info(f"Received /start command from {message.from_user.id}")
 # –ï—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, —É–¥–∞–ª—è–µ–º –µ–≥–æ
    if last_message_id is not None:
        try:
            await bot.delete_message(chat_id=message.chat.id, message_id=last_message_id)
        except Exception as e:
            logging.error(f"Error deleting message {last_message_id}: {e}") 

# –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ ID
    new_message = await message.answer(text=f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!üòä\n–Ø - <b>–¢–≤–∏—Ç–∏</b>, —Ç–≤–æ–π —Ç–µ–Ω–Ω–∏—Å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –∫–ª—É–±–∞ <b>Game Set Match</b> üéæ\n\n'
        '–¢—É—Ç —Ç—ã –º–æ–∂–µ—à—å —É–∑–Ω–∞—Ç—å –æ –Ω–∞—à–∏—Ö <u>—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞—Ö</u>, <u>—Ü–µ–Ω–∞—Ö</u> –∏ <u>–ª–æ–∫–∞—Ü–∏—è—Ö</u> ‚ò∫Ô∏è\n'
        '–ê –µ—Å–ª–∏ —Ç—ã –Ω–µ –Ω–∞—à–µ–ª –æ—Ç–≤–µ—Ç –Ω–∞ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —Ç–µ–±—è –≤–æ–ø—Ä–æ—Å, —Ç–æ —Ç—ã –º–æ–∂–µ—à—å –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –Ω–∞—à–∏–º <u>—Ç—Ä–µ–Ω–µ—Ä–∞–º</u> üíå\n'
        '–ù–∞–∂–º–∏ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–µ —Ç–µ–±–µ –∫–Ω–æ–ø–∫—É',
        reply_markup=keyboard, parse_mode='HTML') # –ó–∞–ø—É—Å–∫ –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–æ–∫
    last_message_id = new_message.message_id

    if message.from_user.id not in users:
        users[message.from_user.id] = {
            'id —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞': message.from_user.id,
            '–ò–º—è': message.from_user.first_name,
            '–§–∞–º–∏–ª–∏—è': message.from_user.last_name,
            '–õ–æ–≥–∏–Ω –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º–µ': message.from_user.username,
            '–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è':message.text
        }
    logging.info(f"Added new user: {users[message.from_user.id]}")

@dp.message(Command("groups"))
async def process_group_command(message: types.Message):
    logging.info(f"Received /groups command from {message.from_user.id}")
    await message.answer(text='–ù–∞—à —Ç–µ–ª–µ–≥—Ä–∞–º–º –∫–∞–Ω–∞–ª https://t.me/tennisclub_gsm')
    if message.from_user.id not in users:
        users[message.from_user.id] = {
            'id —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞': message.from_user.id,
            '–ò–º—è': message.from_user.first_name,
            '–§–∞–º–∏–ª–∏—è': message.from_user.last_name,
            '–õ–æ–≥–∏–Ω –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º–µ': message.from_user.username,
            '–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è':message.text
        }
       # logging.info(f"Added new user: {users[message.from_user.id]}")
        logging.info(f"Added new user: {users[message.from_user.id]}" )

@dp.callback_query(F.data == 'action_button')
async def process_action_button(callblack: CallbackQuery):
    back_keyboard = InlineKeyboardMarkup(inline_keyboard=[[back_button]])   
    await callblack.message.edit_text(text='<b>–ê–ö–¶–ò–ò</b>\n\n'
                                            '1. –ü—Ä–∏ –ø–æ–∫—É–ø–∫–µ –∞–±–æ–Ω–µ–º–µ–Ω—Ç–∞ –¥—Ä—É–≥–æ–º\n'
                                            '+1 –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –¢–ï–ë–ï\n\n'
                                            '2. –ê–∫—Ü–∏—è ¬´–î–µ–Ω—å –≤ –¥–µ–Ω—å¬ª\n'
                                            '–ü—Ä–∏ –ø—Ä–æ–¥–ª–µ–Ω–∏–∏ –∞–±–æ–Ω–µ–º–µ–Ω—Ç–∞ –≤ –¥–µ–Ω—å –ø–æ—Å–ª–µ–¥–Ω–µ–π —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ -\n'
                                            '10% –Ω–∞ –ø–æ–∫—É–ø–∫—É –Ω–æ–≤–æ–≥–æ\n\n'
                                            '3. –ê–±–æ–Ω–µ–º–µ–Ω—Ç ¬´–°–ï–ú–ï–ô–ù–´–ô¬ª\n'
                                            '–¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ —á–ª–µ–Ω–∞ —Å–µ–º—å–∏ -10% –Ω–∞ –ø–æ–∫—É–ø–∫—É\n'
                                            '–ù–û–í–û–ì–û –ê–ë–û–ù–ï–ú–ï–ù–¢–ê\n\n'
                                            '4. ¬´–ü—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–π Happy Birthday¬ª\n'
                                            '–∑–∞ 3 –¥–Ω—è –¥–æ –∏ 3 –ø–æ—Å–ª–µ –≤–∞—à–µ–≥–æ –¥–Ω—è —Ä–æ–∂–¥–µ–Ω–∏—è - —Å–∫–∏–¥–∫–∞ 10%\n'
                                            '–Ω–∞ –Ω–æ–≤—ã–π –∞–±–æ–Ω–µ–º–µ–Ω—Ç\n', reply_markup=back_keyboard, parse_mode='HTML')
    await callblack.answer() #–£–±–∏—Ä–∞–µ—Ç —á–∞—Å–∏–∫–∏ —Å –∫–Ω–æ–ø–∫–∏

@dp.callback_query(F.data == 'show_prices')
async def process_show_price_one_press(callblack: CallbackQuery):
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Ç–æ–ª—å–∫–æ —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥"
    back_keyboard = InlineKeyboardMarkup(inline_keyboard=[[price_button_dynamit],[price_button_Dinamo],[price_button_vaska],[back_button]]) 
# –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, –∑–∞–º–µ–Ω—è—è —Å—Ç–∞—Ä—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –Ω–∞ –Ω–æ–≤—É—é
    await callblack.message.edit_text(text='–í—ã–±–µ—Ä–∏ –Ω—É–∂–Ω—ã–π –∞–¥—Ä–µ—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ <u>—Ü–µ–Ω–∞–º</u>\n'
    '\n–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥", —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.', reply_markup=back_keyboard, parse_mode='HTML')
    await callblack.answer() #–£–±–∏—Ä–∞–µ—Ç —á–∞—Å–∏–∫–∏ —Å –∫–Ω–æ–ø–∫–∏

@dp.callback_query(F.data == 'price_button_vaska')
async def process_show_price_vaska(callback_query: CallbackQuery):
    await bot.answer_callback_query(callback_query.id)#–£–±–∏—Ä–∞–µ—Ç —á–∞—Å–∏–∫–∏ —Å –∫–Ω–æ–ø–∫–∏
    back_keyboard = InlineKeyboardMarkup(inline_keyboard=[[back_button_show_price]])
    await callback_query.message.edit_text(text='–í—ã –≤—ã–±—Ä–∞–ª–∏ <b>–ù–∞–ª–∏—á–Ω–∞—è</b>\n\n–¶–µ–Ω—ã –Ω–∞\n'
                                            '–ì–†–£–ü–ü–û–í–´–ï –¢–†–ï–ù–ò–†–û–í–ö–ò\n'
                                            '–ù–ê –ù–ê–õ–ò–ß–ù–û–ô 44\n\n'
                                            '–†–ê–ó–û–í–û–ï –ü–û–°–ï–©–ï–ù–ò–ï\n'
                                            '1,5 —á–∞—Å–∞\n'
                                            '2600—Ä\n\n'
                                            '4 —Ä–∞–∑–∞ –≤ –º–µ—Å—è—Ü\n'
                                            '(–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ 1 —Ä–∞–∑ –≤ –Ω–µ–¥–µ–ª—é)\n'
                                            '1,5 —á–∞—Å–∞\n'
                                            '9500—Ä\n\n'
                                            '8 —Ä–∞–∑ –≤ –º–µ—Å—è—Ü\n'
                                            '(–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ 2 —Ä–∞–∑–∞ –≤ –Ω–µ–¥–µ–ª—é)\n'
                                            '1,5 —á–∞—Å–∞\n'
                                            '17000—Ä\n'
                                            '\n–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥", —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.', reply_markup=back_keyboard, parse_mode='HTML')
    await callback_query.answer() #–£–±–∏—Ä–∞–µ—Ç —á–∞—Å–∏–∫–∏ —Å –∫–Ω–æ–ø–∫–∏

@dp.callback_query(F.data == 'price_button_dynamit')
async def process_show_price_dynamit(callback_query: CallbackQuery):
    await bot.answer_callback_query(callback_query.id)#–£–±–∏—Ä–∞–µ—Ç —á–∞—Å–∏–∫–∏ —Å –∫–Ω–æ–ø–∫–∏
    back_keyboard = InlineKeyboardMarkup(inline_keyboard=[[back_button_show_price]])   
    await callback_query.message.edit_text(text='–í—ã –≤—ã–±—Ä–∞–ª–∏ <b>–í–ú–§</b>\n\n–¶–µ–Ω—ã –Ω–∞ \n'
                                            '–ì–†–£–ü–ü–û–í–´–ï –¢–†–ï–ù–ò–†–û–í–ö–ò\n'
                                            '–ù–∞ –í–ú–§ (–°—Ä–µ–¥–Ω–∏–π –ø—Ä–æ—Å–ø–µ–∫—Ç 87 –í.–û.)\n\n'
                                            '–†–ê–ó–û–í–û–ï –ü–û–°–ï–©–ï–ù–ò–ï\n'
                                            '1,5 –ß–∞—Å–∞\n'
                                            '2600—Ä\n\n'
                                            '4 —Ä–∞–∑–∞ –≤ –º–µ—Å—è—Ü\n'
                                            '(–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ 1 —Ä–∞–∑ –≤ –Ω–µ–¥–µ–ª—é)\n'
                                            '1,5 –ß–∞—Å–∞\n'
                                            '9500—Ä\n\n'
                                            '8 —Ä–∞–∑ –≤ –º–µ—Å—è—Ü\n'
                                            '(–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ 2 —Ä–∞–∑–∞ –≤ –Ω–µ–¥–µ–ª—é)\n'
                                            '1,5 –ß–∞—Å–∞\n'
                                            '17000—Ä\n'
                                            '\n–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥", —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.', reply_markup=back_keyboard, parse_mode='HTML')
    await callback_query.answer() #–£–±–∏—Ä–∞–µ—Ç —á–∞—Å–∏–∫–∏ —Å –∫–Ω–æ–ø–∫–∏

@dp.callback_query(F.data == 'price_button_dinamo')
async def process_show_price_dynamit(callback_query: CallbackQuery):
    await bot.answer_callback_query(callback_query.id)#–£–±–∏—Ä–∞–µ—Ç —á–∞—Å–∏–∫–∏ —Å –∫–Ω–æ–ø–∫–∏
    back_keyboard = InlineKeyboardMarkup(inline_keyboard=[[back_button_show_price]])   
    await callback_query.message.edit_text(text='–í—ã –≤—ã–±—Ä–∞–ª–∏ <b>–î–∏–Ω–∞–º–æ</b>\n\n–¶–µ–Ω—ã –Ω–∞\n'
                                            '–ì–†–£–ü–ü–û–í–´–ï –¢–†–ï–ù–ò–†–û–í–ö–ò\n'
                                            '–ù–∞ –î–∏–Ω–∞–º–æ \n\n'
                                            '–†–ê–ó–û–í–û–ï –ü–û–°–ï–©–ï–ù–ò–ï\n'
                                            '1,0 —á–∞—Å (–£—Ç—Ä–æ)\n'
                                            '2300—Ä —Å —á–µ–ª–æ–≤–µ–∫–∞\n\n'
                                            '1.0 —á–∞—Å (–î–µ–Ω—å)\n'
                                            '2500—Ä —Å —á–µ–ª–æ–≤–µ–∫–∞\n\n'
                                            '1,5 —á–∞—Å–∞ (–£—Ç—Ä–æ)\n'
                                            '3200—Ä —Å —á–µ–ª–æ–≤–µ–∫–∞\n\n'
                                            '1.5 —á–∞—Å–∞ (–î–µ–Ω—å)\n'
                                            '3500—Ä —Å —á–µ–ª–æ–≤–µ–∫–∞\n'
                                            '\n–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥", —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.', reply_markup=back_keyboard, parse_mode='HTML')
    await callback_query.answer() #–£–±–∏—Ä–∞–µ—Ç —á–∞—Å–∏–∫–∏ —Å –∫–Ω–æ–ø–∫–∏

# –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
@dp.callback_query(F.data == 'back_to_menu')
async def process_back_to_menu(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id) #–£–±–∏—Ä–∞–µ—Ç —á–∞—Å–∏–∫–∏ —Å –∫–Ω–æ–ø–∫–∏
    await bot.edit_message_text(chat_id=callback_query.message.chat.id,
                                message_id=callback_query.message.message_id,
                                text=f'–ü—Ä–∏–≤–µ—Ç, {callback_query.from_user.first_name}!üòä\n–Ø - <b>–¢–≤–∏—Ç–∏</b>, —Ç–≤–æ–π —Ç–µ–Ω–Ω–∏—Å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –∫–ª—É–±–∞ <b>Game Set Match</b> üéæ\n\n'
        '–¢—É—Ç —Ç—ã –º–æ–∂–µ—à—å —É–∑–Ω–∞—Ç—å –æ –Ω–∞—à–∏—Ö <u>—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞—Ö</u>, <u>—Ü–µ–Ω–∞—Ö</u> –∏ <u>–ª–æ–∫–∞—Ü–∏—è—Ö</u> ‚ò∫Ô∏è\n'
        '–ê –µ—Å–ª–∏ —Ç—ã –Ω–µ –Ω–∞—à–µ–ª –æ—Ç–≤–µ—Ç –Ω–∞ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —Ç–µ–±—è –≤–æ–ø—Ä–æ—Å, —Ç–æ —Ç—ã –º–æ–∂–µ—à—å –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –Ω–∞—à–∏–º <u>—Ç—Ä–µ–Ω–µ—Ä–∞–º</u> üíå\n'
        '–ù–∞–∂–º–∏ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–µ —Ç–µ–±–µ –∫–Ω–æ–ø–∫—É',
                                reply_markup=keyboard,
                                parse_mode='HTML')


# –ó–¥–µ—Å—å –∑–∞–ø–æ–ª–Ω—è–µ—Ç—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∫–Ω–æ–ø–∫–µ –õ–æ–∫–∞—Ü–∏–∏
@dp.callback_query(F.data == 'schedule')
async def process_schedule_press(callblack: CallbackQuery):
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Ç–æ–ª—å–∫–æ —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥"
    back_keyboard = InlineKeyboardMarkup(inline_keyboard=[[button_VMF_schedule],[button_Dinamo_schedule],[button_Nalichnay_schedule],[back_button]])  
    await callblack.message.edit_text(text='–í—ã–±–µ—Ä–∏ –Ω—É–∂–Ω—ã–π <u>–∞–¥—Ä–µ—Å</u> –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.\n'
    '\n–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥", —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.', reply_markup=back_keyboard, parse_mode='HTML')
    await callblack.answer() #–£–±–∏—Ä–∞–µ—Ç —á–∞—Å–∏–∫–∏ —Å –∫–Ω–æ–ø–∫–∏

@dp.callback_query(F.data == 'button_VMF_schedule')
async def process_show_price_vaska(callback_query: CallbackQuery):
    await bot.answer_callback_query(callback_query.id)#–£–±–∏—Ä–∞–µ—Ç —á–∞—Å–∏–∫–∏ —Å –∫–Ω–æ–ø–∫–∏
   
    back_keyboard = InlineKeyboardMarkup(inline_keyboard=[[back_button_show_schedule]])
    
    await callback_query.message.edit_text(text='–í—ã –≤—ã–±—Ä–∞–ª–∏ <b>–í–ú–§</b>\n\n'
                        "<u>–ü–û–ù–ï–î–ï–õ–¨–ù–ò–ö</u> (–ü—Ä–æ–¥–æ–ª–∂–∞—é—â–∏–µ, NTRP 2.0-3.5)\n"
                        "20:00-21:30\n\n"
                        "<u>–ü–û–ù–ï–î–ï–õ–¨–ù–ò–ö</u> (–°—Ä–µ–¥–Ω–∏–µ, NTRP 3.5-4.5)\n"
                        "20:00-21:30\n\n"
                        "<u>–í–¢–û–†–ù–ò–ö</u> (–ü—Ä–æ–¥–æ–ª–∂–∞—é—â–∏–µ, NTRP 2.0-3.5)\n"
                        "20:00-21:30\n\n"
                        "<u>–°–†–ï–î–ê</u> (–°—Ä–µ–¥–Ω–∏–µ, NTRP 3.5-4.5)\n"
                        "20:00-21:30\n\n"
                        "<u>–ß–ï–¢–í–ï–†–ì</u> (–ü—Ä–æ–¥–æ–ª–∂–∞—é—â–∏–µ, NTRP 2.0-3.5)\n"
                        "20:00-21:30\n\n"
                        "<u>–ü–Ø–¢–ù–ò–¶–ê</u> (–ù–∞—á–∏–Ω–∞—é—â–∏–µ, NTRP 0-2.5)\n"
                        "20:00-21:30\n\n"
                        '\n–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥", —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.', reply_markup=back_keyboard, parse_mode='HTML')
    await callback_query.answer() #–£–±–∏—Ä–∞–µ—Ç —á–∞—Å–∏–∫–∏ —Å –∫–Ω–æ–ø–∫–∏

@dp.callback_query(F.data == 'button_Dinamo_schedule')
async def process_show_price_vaska(callback_query: CallbackQuery):
    await bot.answer_callback_query(callback_query.id)#–£–±–∏—Ä–∞–µ—Ç —á–∞—Å–∏–∫–∏ —Å –∫–Ω–æ–ø–∫–∏
   
    back_keyboard = InlineKeyboardMarkup(inline_keyboard=[[back_button_show_schedule]])
    
    await callback_query.message.edit_text(text='–í—ã –≤—ã–±—Ä–∞–ª–∏ <b>–î–∏–Ω–∞–º–æ</b>\n\n'
                        "<u>–ü–û–ù–ï–î–ï–õ–¨–ù–ò–ö</u> (–°—Ä–µ–¥–Ω–∏–µ, NTRP 3.5-4.5)\n"
                        "08:00-09:00 –£—Ç—Ä–æ (–ì—Ä—É–Ω—Ç/–•–∞—Ä–¥)\n"
                        "14:00-15:00 –î–µ–Ω—å (–ì—Ä—É–Ω—Ç/–•–∞—Ä–¥)\n\n"
                        "<u>–°–†–ï–î–ê</u> (–ù–∞—á–∏–Ω–∞—é—â–∏–µ, NTRP 0-2.0)\n"
                        "08:00-09:00 –£—Ç—Ä–æ (–ì—Ä—É–Ω—Ç/–•–∞—Ä–¥)\n"
                        "14:00-15:00 –î–µ–Ω—å (–ì—Ä—É–Ω—Ç/–•–∞—Ä–¥)\n\n"
                        "<u>–ü–Ø–¢–ù–ò–¶–ê</u> (–ü—Ä–æ–¥–æ–ª–∂–∞—é—â–∏–µ, NTRP 2.0-3.5)\n"
                        "08:00-09:00 –£—Ç—Ä–æ (–ì—Ä—É–Ω—Ç/–•–∞—Ä–¥)\n"
                        "14:00-15:00 –î–µ–Ω—å (–ì—Ä—É–Ω—Ç/–•–∞—Ä–¥)\n\n"
                        '\n–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥", —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.', reply_markup=back_keyboard, parse_mode='HTML')
    await callback_query.answer() #–£–±–∏—Ä–∞–µ—Ç —á–∞—Å–∏–∫–∏ —Å –∫–Ω–æ–ø–∫–∏

@dp.callback_query(F.data == 'button_Nalichnay_schedule')
async def process_show_price_vaska(callback_query: CallbackQuery):
    await bot.answer_callback_query(callback_query.id)#–£–±–∏—Ä–∞–µ—Ç —á–∞—Å–∏–∫–∏ —Å –∫–Ω–æ–ø–∫–∏
   
    back_keyboard = InlineKeyboardMarkup(inline_keyboard=[[back_button_show_schedule]])
    
    await callback_query.message.edit_text(text='–í—ã –≤—ã–±—Ä–∞–ª–∏ <b>–ù–∞–ª–∏—á–Ω–∞—è</b>\n\n'
                        "<u>–ü–û–ù–ï–î–ï–õ–¨–ù–ò–ö</u> (–ü—Ä–æ–¥–æ–ª–∂–∞—é—â–∏–µ, NTRP 2.0-3.5)\n"
                        "21:00-22:30\n\n"
                        "<u>–í–¢–û–†–ù–ò–ö</u> (–ü—Ä–æ–¥–æ–ª–∂–∞—é—â–∏–µ, NTRP 2.0-3.5)\n"
                        "21:00-22:30\n\n"
                        "<u>–°–†–ï–î–ê</u> (–°—Ä–µ–¥–Ω–∏–µ, NTRP 3.5-4.5)\n"
                        "21:00-22:30\n\n"
                        "<u>–ß–ï–¢–í–ï–†–ì</u> (–ü—Ä–æ–¥–æ–ª–∂–∞—é—â–∏–µ, NTRP 2.0-3.5)\n"
                        "21:00-22:30\n\n"
                        "<u>–ü–Ø–¢–ù–ò–¶–ê</u> (–°—Ä–µ–¥–Ω–∏–µ, NTRP 3.5-4.5)\n"
                        "21:00-22:30\n"
                        '\n–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥", —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.', reply_markup=back_keyboard, parse_mode='HTML')
    await callback_query.answer() #–£–±–∏—Ä–∞–µ—Ç —á–∞—Å–∏–∫–∏ —Å –∫–Ω–æ–ø–∫–∏

@dp.callback_query(F.data == 'show_address')
async def process_show_address_callback(callblack: CallbackQuery):
    await bot.answer_callback_query(callblack.id) #–£–±–∏—Ä–∞–µ—Ç —á–∞—Å–∏–∫–∏ —Å –∫–Ω–æ–ø–∫–∏
     # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Ç–æ–ª—å–∫–æ —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥"
    back_keyboard = InlineKeyboardMarkup(inline_keyboard=[[dynamit_button_location],[dinamo_button_location],[vaska_button_location],[back_button]])
    await callblack.message.edit_text(text='–í—ã–±–µ—Ä–∏ –Ω—É–∂–Ω—É—é –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è <u>–∞–¥—Ä–µ—Å–∞</u>.\n'
    '\n–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥", —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.', reply_markup=back_keyboard, parse_mode='HTML')
    await callblack.answer() #–£–±–∏—Ä–∞–µ—Ç —á–∞—Å–∏–∫–∏ —Å –∫–Ω–æ–ø–∫–∏
  
@dp.callback_query(F.data == 'vaska_button_location')
async def process_vaska_button(callback_query: CallbackQuery):
    await bot.answer_callback_query(callback_query.id)#–£–±–∏—Ä–∞–µ—Ç —á–∞—Å–∏–∫–∏ —Å –∫–Ω–æ–ø–∫–∏
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Ç–æ–ª—å–∫–æ —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥"
    back_keyboard = InlineKeyboardMarkup(inline_keyboard=[[back_button_show_address]])   
    await callback_query.message.edit_text(
        text='–í—ã –≤—ã–±—Ä–∞–ª–∏ <b>"–ù–∞–ª–∏—á–Ω–∞—è"</b>\n\n–ê–¥—Ä–µ—Å: –ù–∞–ª–∏—á–Ω–∞—è —É–ª–∏—Ü–∞ 44, –∫–æ—Ä–ø—É.6–ö\n\n'
        '–¢–∏–ø –∫–æ—Ä—Ç–∞: –•–∞—Ä–¥, –∑–∞–∫—Ä—ã—Ç—ã–π –∫–æ—Ä—Ç\n(–ö–∞—Ä–∫–∞—Å)\n\n'
        '–û–ø–∏—Å–∞–Ω–∏–µ: –ü–æ—Å–µ—â–µ–Ω–∏–µ –Ω–∞ —ç—Ç–æ—Ç —Ç–∏–ø –∫–æ—Ä—Ç–∞, <b>—Ä–∞–∑—Ä–µ—à–µ–Ω–æ</b> —Ç–æ–ª—å–∫–æ –≤ –∫—Ä–æ—Å—Å–æ–≤–∫–∞—Ö —Å <b>—á–∏—Å—Ç–æ–π –ø–æ–¥–æ—à–≤–æ–π</b>.\n'
        '–†–∞–∑–¥–µ–≤–∞–ª–∫–∏ —Å –¥—É—à–µ–º –∏–º–µ—é—Ç—Å—è.\n'
        '–ü–∞—Ä–∫–æ–≤–∫–∞ –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è.\n\n'
        '–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥", —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥.', reply_markup=back_keyboard, parse_mode='HTML')
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Ç–æ—á–∫–∏ –Ω–∞ –∫–∞—Ä—Ç–µ
    await bot.send_location(callback_query.from_user.id) #latitude=latitude, longitude=longitude)

@dp.callback_query(F.data == 'dynamit_button_location')
async def process_dynamit_button(callback_query: CallbackQuery):
    await bot.answer_callback_query(callback_query.id)  # –£–±–∏—Ä–∞–µ—Ç —á–∞—Å–∏–∫–∏ —Å –∫–Ω–æ–ø–∫–∏
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Ç–æ–ª—å–∫–æ —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥"
    back_keyboard = InlineKeyboardMarkup(inline_keyboard=[[back_button_show_address]])
    await callback_query.message.edit_text(
        text='–í—ã –≤—ã–±—Ä–∞–ª–∏ <b>"–í–ú–§"</b>\n\n–ê–¥—Ä–µ—Å: –°—Ä–µ–¥–Ω–∏–π –ø—Ä–æ—Å–ø. –í–∞—Å–∏–ª—å–µ–≤—Å–∫–æ–≥–æ –æ—Å—Ç—Ä–æ–≤–∞, 87\n\n'
        '–¢–∏–ø –∫–æ—Ä—Ç–∞: –ì—Ä—É–Ω—Ç, –æ—Ç–∫—Ä—ã—Ç—ã–π –∫–æ—Ä—Ç\n\n'
        '–û–ø–∏—Å–∞–Ω–∏–µ: –ù–∞ —ç—Ç–æ—Ç —Ç–∏–ø –∫–æ—Ä—Ç–∞ —Å—Ç–æ–∏—Ç –±—Ä–∞—Ç—å –∫—Ä–æ—Å—Å–æ–≤–∫–∏ –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –∂–∞–ª–∫–æ –∏—Å–ø–∞—á–∫–∞—Ç—å, –≤ –∂–∞—Ä–∫–∏–µ –¥–Ω–∏ —Å—Ç–æ–∏—Ç –±—Ä–∞—Ç—å —Å —Å–æ–±–æ–π –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–¥—ã –∏ –∫—Ä–µ–º –æ—Ç –∑–∞–≥–∞—Ä–∞.\n'
        '–†–∞–∑–¥–µ–≤–∞–ª–∫–∏ —Å –¥—É—à–µ–º –µ—Å—Ç—å –≤ —Å–æ—Å–µ–¥–Ω–µ–º –∑–¥–∞–Ω–∏–∏ (–í–ú–§ –±–∞—Å—Å–µ–π–Ω).\n' 
        '–ü–∞—Ä–∫–æ–≤–∫–∞ –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è\n\n'
        '–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥", —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥.', reply_markup=back_keyboard, parse_mode='HTML')
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Ç–æ—á–∫–∏ –Ω–∞ –∫–∞—Ä—Ç–µ
    await bot.send_location(callback_query.from_user.id) #latitude=latitude, longitude=longitude)

@dp.callback_query(F.data == 'dinamo_button_location')
async def process_dynamit_button(callback_query: CallbackQuery):
    await bot.answer_callback_query(callback_query.id)  # –£–±–∏—Ä–∞–µ—Ç —á–∞—Å–∏–∫–∏ —Å –∫–Ω–æ–ø–∫–∏
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Ç–æ–ª—å–∫–æ —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥"
    back_keyboard = InlineKeyboardMarkup(inline_keyboard=[[back_button_show_address]])
    await callback_query.message.edit_text(
        text='–í—ã –≤—ã—ã–±—Ä–∞–ª–∏ <b>"–î–∏–Ω–∞–º–æ"</b>\n\n–ê–¥—Ä–µ—Å: –¶–µ–Ω—Ç—Ä —Ç–µ–Ω–Ω–∏—Å–∞, –°–ø–æ—Ä—Ç–∏–≤–Ω–∞—è —É–ª. 8\n\n'
        '–¢–∏–ø –∫–æ—Ä—Ç–∞: –•–∞—Ä–¥, –∑–∞–∫—Ä—ã—Ç—ã–π –∫–æ—Ä—Ç\n(–∫–∞—Ä–∫–∞—Å)\n'
        '–ì—Ä—É–Ω—Ç, –æ—Ç–∫—Ä—ã—Ç—ã–π –∫–æ—Ä—Ç\n\n'
        '–û–ø–∏—Å–∞–Ω–∏–µ : –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±–æ—Ä–∞ –≤–∞—à–µ–π –≥—Ä—É–ø–ø—ã –≤–∞–º —Å—Ç–æ–∏—Ç –ø–æ–¥–æ–±—Ä–∞—Ç—å –∫—Ä–æ—Å—Å–æ–≤–∫–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –ø–æ–¥ –ø–æ–∫—Ä—ã—Ç–∏–µ –∫–æ—Ä—Ç–∞.\n' 
        '–ï—Å—Ç—å —Ä–∞–∑–¥–µ–≤–∞–ª–∫–∏ —Å –¥—É—à–µ–º.\n'
        '–ü–∞—Ä–∫–æ–≤–∫–∞ –≥–æ—Ä–æ–¥—Å–∫–∞—è 100—Ä/—á–∞—Å –∏–ª–∏ –ø—Ä—è–º–æ —É –∫–æ—Ä—Ç–æ–≤ (–∑–∞–µ–∑–¥ —á–µ—Ä–µ–∑ —à–ª–∞–≥–±–∞—É–º - 400—Ä/–¥–µ–Ω—å).\n\n'
        '–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥", —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥.', reply_markup=back_keyboard, parse_mode='HTML')
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Ç–æ—á–∫–∏ –Ω–∞ –∫–∞—Ä—Ç–µ
    await bot.send_location(callback_query.from_user.id) #latitude=latitude, longitude=longitude)

# –ó–¥–µ—Å—å –∑–∞–ø–æ–ª–Ω—è–µ—Ç—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∫–Ω–æ–ø–∫–µ –ö–æ–Ω—Ç–∞–∫—Ç—ã —Ç—Ä–µ–Ω–µ—Ä–æ–≤
@dp.callback_query(F.data == 'contact')
async def process_conctact_callback(callblack: CallbackQuery):
    await bot.answer_callback_query(callblack.id) #–£–±–∏—Ä–∞–µ—Ç —á–∞—Å–∏–∫–∏ —Å –∫–Ω–æ–ø–∫–∏
     # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Ç–æ–ª—å–∫–æ —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥"
    back_keyboard = InlineKeyboardMarkup(inline_keyboard=[[Kuznetsova_button],[Ivanova_button],[Savin_button],[back_button]])
    await callblack.message.edit_text(text='–ó–¥–µ—Å—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç—Ä–µ–Ω–µ—Ä–∞—Ö —à–∫–æ–ª—ã.\n–í—ã–±–µ—Ä–∏ –Ω—É–∂–Ω–æ–≥–æ —Ç—Ä–µ–Ω–µ—Ä–∞ –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏\n'
    '.\n–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥", —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.', reply_markup=back_keyboard)
    await callblack.answer() #–£–±–∏—Ä–∞–µ—Ç —á–∞—Å–∏–∫–∏ —Å –∫–Ω–æ–ø–∫–∏

@dp.callback_query(F.data == 'Kuznetsova')
async def process_Kuznetsova_press(callblack: CallbackQuery):
    back_keyboard = InlineKeyboardMarkup(inline_keyboard=[[back_button_contact]])
    await bot.answer_callback_query(callblack.id) #–£–±–∏—Ä–∞–µ—Ç —á–∞—Å–∏–∫–∏ —Å –∫–Ω–æ–ø–∫–∏
    await callblack.message.edit_text(text='‚ñ™Ô∏è–¢—Ä–µ–Ω–µ—Ä : –ö—É–∑–Ω–µ—Ü–æ–≤–∞ –ï–ª–∏–∑–∞–≤–µ—Ç–∞ –ï–≤–≥–µ–Ω—å–µ–≤–Ω–∞\n'
'‚ñ™Ô∏è–õ—é–±–∏–º—ã–π —É–¥–∞—Ä: –±—ç–∫—Ö–µ–Ω–¥ (—Å–ª–µ–≤–∞)\n'
'–ø–æ–º–∏–º–æ —Ç–µ–Ω–Ω–∏—Å–∞, –ª—é–±–∏—Ç —Ç–∞–Ω—Ü—ã –∏ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è\n'
'‚ñ™Ô∏è–ö–æ—Ä–æ–Ω–Ω–∞—è —Ñ—Ä–∞–∑–∞ : ¬´–Ω—É –∏ –≤—Å—ë¬ª\n'
'‚ñ™Ô∏è–õ—é–±–∏–º—ã–π —Å–º–∞–π–ª : üòà\n'
'‚ñ™Ô∏è–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏: —Å—É–¥—å—è –ø–æ —Ç–µ–Ω–Ω–∏—Å—É üë©‚Äç‚öñÔ∏è\n'
'‚ñ™Ô∏è–°–ø–µ—Ü–∏—Ñ–∏–∫–∞ —Ä–∞–±–æ—Ç—ã :\n'
'- –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ —Å "–Ω—É–ª—è"\n'
'- –î–µ—Ç—Å–∫–∏–µ –∏ –≤–∑—Ä–æ—Å–ª—ã–µ –≥—Ä—É–ø–ø–æ–≤—ã–µ –∏ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏\n'
'- –°–ø–∞—Ä—Ä–∏–Ω–≥\n' 
'- –°–ø–ª–∏—Ç —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏\n'
'‚ñ™Ô∏è–û–±—É—á–∞—é –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–π —Ç–µ—Ö–Ω–∏–∫–µ, –±–ª–∞–≥–æ–¥–∞—Ä—è –∫–æ—Ç–æ—Ä–æ–π —Å–º–æ–∂–µ—Ç–µ –Ω–µ —Ç–æ–ª—å–∫–æ –∞–∫—Ç–∏–≤–Ω–æ –ø—Ä–æ–≤–æ–¥–∏—Ç—å –≤—Ä–µ–º—è, –Ω–æ –∏ –ø–æ–ª—É—á–∞—Ç—å —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ –æ—Ç —Å–≤–æ–µ–π –∏–≥—Ä—ã üéæ\n' \
'https://t.me/—Å—Å—ã–ª–∫_–ù–∞_–Æ–∑–µ—Ä–∞', reply_markup=back_keyboard)
    await callblack.answer() #–£–±–∏—Ä–∞–µ—Ç —á–∞—Å–∏–∫–∏ —Å –∫–Ω–æ–ø–∫–∏

# –í–æ–∑–≤—Ä–∞—Ç –≤ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –º–µ–Ω—é
@dp.callback_query(F.data == 'back_button_contact')
async def process_conctact_callback(callblack: CallbackQuery):
    await bot.answer_callback_query(callblack.id) #–£–±–∏—Ä–∞–µ—Ç —á–∞—Å–∏–∫–∏ —Å –∫–Ω–æ–ø–∫–∏
     # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Ç–æ–ª—å–∫–æ —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥"
    back_keyboard = InlineKeyboardMarkup(inline_keyboard=[[Kuznetsova_button],[Ivanova_button],[Savin_button],[back_button]])
    await callblack.message.edit_text(text='–ó–¥–µ—Å—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç—Ä–µ–Ω–µ—Ä–∞—Ö —à–∫–æ–ª—ã.\n–í—ã–±–µ—Ä–∏ –Ω—É–∂–Ω–æ–≥–æ —Ç—Ä–µ–Ω–µ—Ä–∞ –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏\n'
    '\n–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥", —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.', reply_markup=back_keyboard)
    await callblack.answer()

@dp.callback_query(F.data == 'back')
async def process_contact_press(callblack: CallbackQuery, state: FSMContext):
    await bot.answer_callback_query(callblack.id)  # –£–±–∏—Ä–∞–µ—Ç —á–∞—Å–∏–∫–∏ —Å –∫–Ω–æ–ø–∫–∏
    # –ó–¥–µ—Å—å –í—ã –º–æ–∂–µ—Ç–µ –≤–µ—Ä–Ω—É—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –º–µ–Ω—é
    previous_menu_keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='–ö—É–∑–Ω–µ—Ü–æ–≤–∞', callback_data='Kuznetsova')],
        [InlineKeyboardButton(text='–î—Ä—É–≥–æ–π —Ç—Ä–µ–Ω–µ—Ä', callback_data='OtherCoach')]
    ]) 
    await callblack.message.edit_text(
        text='–í—ã–±–µ—Ä–∏—Ç–µ —Ç—Ä–µ–Ω–µ—Ä–∞:',
        reply_markup=previous_menu_keyboard
    )

@dp.callback_query(F.data == 'Ivanova')
async def process_Kuznetsova_press(callblack: CallbackQuery):
    back_keyboard = InlineKeyboardMarkup(inline_keyboard=[[back_button_contact]])
    await bot.answer_callback_query(callblack.id) #–£–±–∏—Ä–∞–µ—Ç —á–∞—Å–∏–∫–∏ —Å –∫–Ω–æ–ø–∫–∏
    await callblack.message.edit_text(text='üîπ–¢—Ä–µ–Ω–µ—Ä : –ì—Ä–µ–≥–∞ –î–∞—Ä—å—è –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–Ω–∞\n'
'üîπ–õ—é–±–∏–º—ã–π —É–¥–∞—Ä: –ø–æ–¥–∞—á–∞\n'
'üîπ–£–≤–ª–µ—á–µ–Ω–∏—è : –ø–æ–º–∏–º–æ —Ç–µ–Ω–Ω–∏—Å–∞, –ª—é–±–∏—Ç –º–∞—à–∏–Ω—ã üõû\n'
'–ö–æ—Ä–æ–Ω–Ω–∞—è —Ñ—Ä–∞–∑–∞ : ¬´—Ä–∞—Å—Å–ª–∞–±—å—Å—è, –∫–∞–∫ –Ω–∞ –π–æ–≥–µ¬ª\n'
'üîπ–õ—é–±–∏–º—ã–π —Å–º–∞–π–ª : üòè\n'
'üîπ–°–ø–µ—Ü–∏—Ñ–∏–∫–∞ —Ä–∞–±–æ—Ç—ã :\n'
'- –û–±—É—á–µ–Ω–∏–µ –æ—Ç 0 –¥–æ 100\n'
'- –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫ —Ç—É—Ä–Ω–∏—Ä–∞–º\n'
'- –¢–∞–∫—Ç–∏–∫–∞\n'
'- –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ/—Å–ø–ª–∏—Ç/–≥—Ä—É–ø–ø–æ–≤—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏\n'
'üîπ–û–±—É—á–∞—é –∏–≥—Ä–∞—Ç—å –∫—Ä–∞—Å–∏–≤–æ –∏ –±–µ–∑ –Ω–∞–ø—Ä—è–≥–∞, –∫ –∫–∞–∂–¥–æ–º—É –∏–≥—Ä–æ–∫—É –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∏ –ø–æ–¥—Ö–æ–¥—è—â–∞—è —Ç–µ—Ö–Ω–∏–∫–∞. –¢—Ä–µ–Ω–∏—Ä—É—é –Ω–µ–∂–Ω–æ –∏ —Å –ª—é–±–æ–≤—å—é)\n'
'üîπP.S –ù–µ —Ñ–∞–Ω–∞—Ç —Å–∞–¥–æ–º–∞–∑–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è ü•µ\n' 
'https://t.me/—Å—Å—ã–ª–∫–∞_–ù–∞_—Ç—Ä–µ–Ω–µ—Ä–∞', reply_markup=back_keyboard)
    await callblack.answer() #–£–±–∏—Ä–∞–µ—Ç —á–∞—Å–∏–∫–∏ —Å –∫–Ω–æ–ø–∫–∏

@dp.callback_query(F.data == 'back_button_contact')
async def process_conctact_callback(callblack: CallbackQuery):
    await bot.answer_callback_query(callblack.id) #–£–±–∏—Ä–∞–µ—Ç —á–∞—Å–∏–∫–∏ —Å –∫–Ω–æ–ø–∫–∏
     # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Ç–æ–ª—å–∫–æ —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥"
    back_keyboard = InlineKeyboardMarkup(inline_keyboard=[[Kuznetsova_button],[Ivanova_button],[Savin_button],[back_button]])
    await callblack.message.edit_text(text='–ó–¥–µ—Å—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç—Ä–µ–Ω–µ—Ä–∞—Ö —à–∫–æ–ª—ã.\n–í—ã–±–µ—Ä–∏ –Ω—É–∂–Ω–æ–≥–æ —Ç—Ä–µ–Ω–µ—Ä–∞ –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏\n'
    '\n–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥", —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.', reply_markup=back_keyboard)
    await callblack.answer()

@dp.callback_query(F.data == 'Savin')
async def process_Kuznetsova_press(callblack: CallbackQuery):
    back_keyboard = InlineKeyboardMarkup(inline_keyboard=[[back_button_contact]])
    await bot.answer_callback_query(callblack.id) #–£–±–∏—Ä–∞–µ—Ç —á–∞—Å–∏–∫–∏ —Å –∫–Ω–æ–ø–∫–∏
    await callblack.message.edit_text(text='üî∫–¢—Ä–µ–Ω–µ—Ä: –°–∞–≤–∏–Ω –†–æ–º–∞–Ω –ê–Ω–¥—Ä–µ–µ–≤–∏—á\n'
'üî∫–õ—é–±–∏–º—ã–π —Å–º–∞–π–ª: ‚òùÔ∏è\n'
'üî∫–õ—é–±–∏–º—ã–π —É–¥–∞—Ä: —Ñ–æ—Ä—Ö–µ–Ω–¥ (–ª–µ–≤—à–∞)\n'
'üî∫–õ—é–±–∏–º–∞—è —Ñ—Ä–∞–∑–∞: ¬´–≤–æ—Ç —ç—Ç–æ –±—ã–ª–æ –∑–¥–æ—Ä–æ–≤–æ!¬ª\n'
'üî∫–ü–æ–º–∏–º–æ —Ç–µ–Ω–Ω–∏—Å–∞: –ª—é–±–ª—é –±–µ–≥–∞—Ç—å, –∏–≥—Ä–∞—Ç—å –≤ –≤–æ–ª–µ–π–±–æ–ª –∏ –±–∞—Å–∫–µ—Ç–±–æ–ª, –Ω–∞—É–∫—É –∏ —Ç–µ—Ö–Ω–∏–∫—É\n'
'üî∫–°–ø–µ—Ü–∏—Ñ–∏–∫–∞ —Ä–∞–±–æ—Ç—ã:\n'
'- –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏\n'
'- –ì—Ä—É–ø–ø–æ–≤—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏\n'
'- –°–ø–∞—Ä—Ä–∏–Ω–≥\n'
'- –°–ø–ª–∏—Ç-—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏\n'
'- –ü–∞—Ä—Ç–Ω–µ—Ä –ø–æ –ø–∞—Ä–Ω—ã–º —Ç—É—Ä–Ω–∏—Ä–∞–º\n'
'üî∫–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏: –õ—é–±–ª—é —Å–ø–æ—Ä—Ç –∏ –ø—Ä–∏–≤–ª–µ–∫–∞—Ç—å –ª—é–¥–µ–π –∏–º –∑–∞–Ω–∏–º–∞—Ç—å—Å—è üòè\n'

'P. S –°—á–∏—Ç–∞—é, —á—Ç–æ –≤—Å–µ –ø—Ä–æ–±–ª–µ–º—ã –Ω–∞ –∫–æ—Ä—Ç–µ –∏–∑ –∑–∞ –ø–ª–æ—Ö–æ —Ä–∞–±–æ—Ç–∞—é—â–∏—Ö –Ω–æ–≥\n'
'https://t.me/—Å—Å—ã–ª–∫–∞_–ù–∞_—Ç—Ä–µ–Ω–µ—Ä–∞', reply_markup=back_keyboard)
    await callblack.answer() #–£–±–∏—Ä–∞–µ—Ç —á–∞—Å–∏–∫–∏ —Å –∫–Ω–æ–ø–∫–∏    

@dp.callback_query(F.data == 'back_button_contact')
async def process_conctact_callback(callblack: CallbackQuery):
    await bot.answer_callback_query(callblack.id) #–£–±–∏—Ä–∞–µ—Ç —á–∞—Å–∏–∫–∏ —Å –∫–Ω–æ–ø–∫–∏
     # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Ç–æ–ª—å–∫–æ —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥"
    back_keyboard = InlineKeyboardMarkup(inline_keyboard=[[Kuznetsova_button],[Ivanova_button],[Savin_button],[back_button]])
    await callblack.message.edit_text(text='–ó–¥–µ—Å—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç—Ä–µ–Ω–µ—Ä–∞—Ö —à–∫–æ–ª—ã.\n–í—ã–±–µ—Ä–∏ –Ω—É–∂–Ω–æ–≥–æ —Ç—Ä–µ–Ω–µ—Ä–∞ –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏\n'
    '\n–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥", —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.', reply_markup=back_keyboard)
    await callblack.answer()

@dp.callback_query(F.data == 'abonement')
async def process_abonement_press(callblack: CallbackQuery):
     # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Ç–æ–ª—å–∫–æ —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥"
    back_keyboard = InlineKeyboardMarkup(inline_keyboard=[[back_button]])
   
# –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, –∑–∞–º–µ–Ω—è—è —Å—Ç–∞—Ä—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –Ω–∞ –Ω–æ–≤—É—é
    await callblack.message.edit_text(text='1. –ê–±–æ–Ω–µ–º–µ–Ω—Ç –ø—Ä–∏–æ–±—Ä–µ—Ç–∞–µ—Ç—Å—è –Ω–∞ –ø–µ—Ä–∏–æ–¥ –æ–¥–Ω–æ–≥–æ –º–µ—Å—è—Ü–∞ (–Ω–∞ 28 –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω—ã—Ö –¥–Ω–µ–π –∏–ª–∏ 4 –Ω–µ–¥–µ–ª–∏).\n\n'
'2. –í —Å–ª—É—á–∞–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞—Ä–∞–Ω–µ–µ —É–≤–µ–¥–æ–º–∏—Ç—å –æ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–æ—Å–µ—â–µ–Ω–∏—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫!\n\n'
'3. –ü—Ä–∏ –ø—Ä–æ–ø—É—Å–∫–µ –±–æ–ª–µ–µ —á–µ–º –æ–¥–Ω–æ–≥–æ –∑–∞–Ω—è—Ç–∏—è –ø–æ –ø—Ä–∏—á–∏–Ω–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è - –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–π—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–ø—Ä–∞–≤–∫—É, –µ—Å–ª–∏ —ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ.\n\n'
'4. –ü–æ –¥—Ä—É–≥–∏–º –ø—Ä–∏—á–∏–Ω–∞–º –¥–æ–ø—É—Å–∫–∞–µ—Ç—Å—è –æ–¥–Ω–æ–∫—Ä–∞—Ç–Ω–æ–µ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –Ω–∞ –∑–∞–Ω—è—Ç–∏–∏ —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –æ—Ç—ã–≥—Ä—ã—à–∞ –≤ –¥—Ä—É–≥–æ–π –¥–µ–Ω—å –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ —Å–≤–æ–±–æ–¥–Ω—ã—Ö –º–µ—Å—Ç. –í —Å–ª—É—á–∞–µ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –º–µ—Å—Ç —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–æ–≤–µ–¥–µ–Ω–∞ –Ω–∞ "–í–ú–§ (–°—Ä–µ–¥–Ω–∏–π –ø—Ä–æ—Å–ø–µ–∫—Ç 87 –í.–û.)" –∏–ª–∏ "–ù–∞–ª–∏—á–Ω–∞—è —É–ª 44–∫6".\n\n'
'5. –ó–∞—Ä–∞–Ω–µ–µ —É–≤–µ–¥–æ–º–ª—è–π—Ç–µ –æ —Å–≤–æ–µ–º –∂–µ–ª–∞–Ω–∏–∏ –∑–∞–∫—Ä–µ–ø–∏—Ç—å –º–µ—Å—Ç–æ –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –¥–µ–Ω—å –¥–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –≤–∞—à–µ–≥–æ –∞–±–æ–Ω–µ–º–µ–Ω—Ç–∞. –ü—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π –≤ –≤—ã–±–æ—Ä–µ –¥–Ω—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫, –≥–∞—Ä–∞–Ω—Ç–∏—è –∑–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –º–µ—Å—Ç–∞ –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è, —Ç–∞–∫ –∫–∞–∫ –º–µ—Å—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã–¥–µ–ª–µ–Ω–æ –¥—Ä—É–≥–æ–º—É —É—á–µ–Ω–∏–∫—É.\n\n'
'6. –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: –¥–æ 2 —á–µ–ª–æ–≤–µ–∫ –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ ‚Äì 1 —á–∞—Å, –æ—Ç 3 —á–µ–ª–æ–≤–µ–∫ ‚Äì 1,5 —á–∞—Å–∞.\n\n'
'–í–∞–∂–Ω–æ! –ü—Ä–∏ –ø–æ–ª–Ω–æ–º –Ω–∞–±–æ—Ä–µ –≥—Ä—É–ø–ø—ã –≤ 4 —á–µ–ª–æ–≤–µ–∫–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –¥–ª–∏—Ç—Å—è 1,5 —á–∞—Å–∞. –ï—Å–ª–∏ –∫—Ç–æ-—Ç–æ –Ω–µ –ø—Ä–∏—à–µ–ª, —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ —É –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–µ–≥–æ ¬´—Å–≥–æ—Ä–∞–µ—Ç¬ª.\n\n'
'7. –ï—Å–ª–∏ –≤—ã –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞–µ—Ç–µ –º–µ–Ω–µ–µ —á–µ–º –∑–∞ 24 —á–∞—Å–∞ –æ —Å–≤–æ–µ–º –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–µ, –≤–∞—à–µ –∑–∞–Ω—è—Ç–∏–µ ¬´—Å–≥–æ—Ä–∞–µ—Ç¬ª.', reply_markup=back_keyboard)

@dp.message()
async def fallback(message: types.Message):
    await message.answer("–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ –±–æ–ª–µ–µ —Ç–æ—á–Ω—ã–π –∑–∞–ø—Ä–æ—Å")

@dp.errors()
async def error_handler(update: types.Update, exception: Exception):
    logging.error(f"Update: {update} caused error: {exception}")

if __name__ == '__main__':
    dp.startup.register(set_main_menu)
    asyncio.run(dp.start_polling(bot))